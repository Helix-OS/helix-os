ALL_TARGETS += kernel
ALL_CLEAN   += kclean

# global kernel compiler/assembler/linker options
INCLUDE      = -Ikernel/include -Ikernel/include/base/arch/$(ARCH) -I$(MODULE_DIR)
CFLAGS       = -nostartfiles -nodefaultlibs -nostdlib -fno-builtin -Wall $(INCLUDE) -g \
		-ffreestanding
C++FLAGS     = -nostartfiles -nodefaultlibs -nostdlib -fno-builtin -Wall $(INCLUDE) -g \
		-ffreestanding -fno-exceptions -fno-rtti -std=c++11
ASFLAGS      = -f elf
MOD_LDFLAGS  = -fPIC -shared

# where directories are
KERNEL_DIR   = kernel
MODULE_DIR   = $(KERNEL_DIR)/modules
MODOBJ_DIR   = $(KERNEL_DIR)/modobjs

kernel-obj-y =
mod-obj-y    =

include $(KERNEL_DIR)/base/Makefile.objs
include $(wildcard $(MODULE_DIR)/*/Makefile.objs)

%.o : %.c
	@echo "[ ] CC $< -o $@"
	@$(CC) $(CFLAGS) $($@-cflags) -c $< -o $@

%.o : %.cpp
	@echo "[ ] C++ $< -o $@"
	@$(C++) $(C++FLAGS) $($@-cflags) -c $< -o $@

%.o : %.s
	@echo "[ ] AS $<"
	@$(AS) $(ASFLAGS) $($@-asflags) $< -o $@

kmodules: $(mod-obj-y)
kbase: $(kernel-obj-y)
kernel: kbase kmodules

kclean:
	-rm $(kernel-obj-y)
	-rm $(mod-obj-y)
